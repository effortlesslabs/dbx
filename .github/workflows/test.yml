name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test on ${{ matrix.os }} with Rust ${{ matrix.rust }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [stable, beta, nightly]
        
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libssl-dev pkg-config

    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Cache cargo build
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-build-${{ matrix.rust }}-
          ${{ runner.os }}-cargo-build-

    - name: Check Redis connection
      run: |
        sudo apt-get install -y redis-tools
        redis-cli -h localhost -p 6379 ping

    - name: Check code formatting
      run: cargo fmt --all -- --check

    - name: Run clippy lints
      run: cargo clippy --workspace --all-targets --all-features -- -D warnings

    - name: Build workspace
      run: cargo build --workspace --verbose

    - name: Test crates (unit tests)
      run: cargo test --workspace --lib --verbose

    - name: Test crates with Redis (integration tests)
      env:
        REDIS_URL: redis://localhost:6379
      run: cargo test --workspace --lib --verbose -- --ignored

    - name: Test API (unit tests)
      working-directory: ./api
      run: cargo test --lib --verbose

    - name: Test API with Redis (integration tests)
      working-directory: ./api
      env:
        REDIS_URL: redis://localhost:6379
        DATABASE_URL: redis://localhost:6379
      run: cargo test --verbose -- --ignored

    - name: Test examples compilation
      working-directory: ./api
      run: cargo check --examples

    - name: Run integration tests
      working-directory: ./api/tests
      env:
        REDIS_URL: redis://localhost:6379
      run: |
        if [ -f "Cargo.toml" ]; then
          cargo test --verbose
        else
          echo "No integration tests found, skipping..."
        fi

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      
    - name: Install cargo-audit
      run: cargo install cargo-audit
      
    - name: Run security audit
      run: cargo audit

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: llvm-tools-preview

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libssl-dev pkg-config redis-tools

    - name: Install cargo-llvm-cov
      run: cargo install cargo-llvm-cov

    - name: Check Redis connection
      run: redis-cli -h localhost -p 6379 ping

    - name: Generate code coverage
      env:
        REDIS_URL: redis://localhost:6379
        DATABASE_URL: redis://localhost:6379
      run: |
        cargo llvm-cov --workspace --lcov --output-path lcov.info
        cargo llvm-cov --workspace --lcov --output-path lcov-ignored.info -- --ignored

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: lcov.info
        flags: unittests
        name: codecov-umbrella

  benchmark:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libssl-dev pkg-config redis-tools

    - name: Check Redis connection
      run: redis-cli -h localhost -p 6379 ping

    - name: Run benchmarks (if available)
      env:
        REDIS_URL: redis://localhost:6379
      run: |
        if cargo bench --help > /dev/null 2>&1; then
          cargo bench --workspace
        else
          echo "No benchmarks found, skipping..."
        fi